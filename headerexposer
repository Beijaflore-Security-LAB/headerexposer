#!/usr/bin/env python3

import sys
import urllib.request
import ssl
 
color_map = {'green':'\033[92m','yellow':'\033[93m','red':'\033[91m','blue':'\033[94m',
             'magenta':'\033[95m'} 
			 
def print_color(text,color):
    print(color_map[color] + text + '\033[0m', end='')

if len(sys.argv) < 2:
	print('Give me a URL please ')
	print('Usage : headerexposer #URL ')
	sys.exit()
else:
	url = sys.argv[1]
	hdr = { 'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)' }
	myssl = ssl.create_default_context();
	myssl.check_hostname=False
	myssl.verify_mode=ssl.CERT_NONE
	req = urllib.request.Request(url, headers=hdr)
	response = urllib.request.urlopen(req, context=myssl)
	print_color('\nAnalyze headers of ' + sys.argv[1] +'\n', 'blue')
	print('Test occured at : %s' % response.info().get('date'))
#X-XSS-PROTECTION	
	if response.info().get('x-xss-protection'):
		print_color('	[GOOD]	','green')
		print('X-XSS-PROTECTION found, value : %s ' % response.info().get('x-xss-protection'))
	else:
		print_color('	[BAD]	','red')
		print('X-XSS-PROTECTION header is missing')
#Strict-transport-security 
	if response.info().get('Strict-transport-security'):
		print_color('	[GOOD] ','green')
		print('Strict-transport-security found, value : %s ' % response.info().get('Strict-transport-security'))
	else:
		print_color('	[BAD]	','red')
		print('Strict-transport-security header is missing')
#X-Frame-Options  
	if response.info().get('X-Frame-Options'):
		print_color('	[GOOD]	','green')
		print('X-Frame-Options found, value : %s ' % response.info().get('X-Frame-Options'))
	else:
		print_color('	[BAD]	','red')
		print('X-Frame-Options header is missing')
#Content-Security-Policy   
	if response.info().get('Content-Security-Policy'):
		print_color('	[GOOD]	','green')
		print('Content-Security-Policy found, value : %s ' % response.info().get('Content-Security-Policy'))
	else:
		print_color('	[BAD]	','red')
		print('Content-Security-Policy header is missing')
#X-Content-Type-Options   
	if response.info().get('X-Content-Type-Options'):
		print_color('	[GOOD]	','green')
		print('X-Content-Type-Options found, value : %s ' % response.info().get('X-Content-Type-Options'))
	else:
		print_color('	[BAD]	','red')
		print('X-Content-Type-Options header is missing')
#Cache-control   
	if response.info().get('Cache-control'):
		print_color('	[GOOD]	','green')
		print('Cache-control found, value : %s ' % response.info().get('Cache-control'))
	else:
		print_color('	[BAD]	','red')
		print('Cache-control header is missing')
#server   
	if response.info().get('server'):
		print_color('	[BAD]	','red')
		print('Server found, value : %s ' % response.info().get('server'))
#x-powered-by   
	if response.info().get('x-powered-by '):
		print_color('	[BAD]	','red')
		print('x-powered-by  found, value : %s ' % response.info().get('x-powered-by '))	
print('Test ended\n')














